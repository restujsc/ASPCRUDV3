@{
    ViewData["Title"] = "Home Page";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<style>
    .card-blue {
        background-color: #007bff;
        color: white;
    }

    .card-green {
        background-color: #28a745;
        color: white;
    }

    .card-yellow {
        background-color: #ffc107;
        color: black;
    }

    .card-red {
        background-color: #dc3545;
        color: white;
    }

    .table-black-border {
        border: 1px solid black;
    }

        .table-black-border th, .table-black-border td {
            border: 0.5px solid black;
        }

    .header-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .header-title {
        margin: 0;
        font-size: 1.25rem;
    }

    .add-button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        background-color: green;
        color: white;
        font-size: 16px;
        cursor: pointer;
        text-decoration: none;
        line-height: 1;
    }

        .add-button:hover {
            background-color: #0056b3;
        }

    .card-chart {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 200px;
        font-size: 50px;
        color: white;
    }

    .table-container {
        overflow-x: auto;
        white-space: nowrap;
    }
</style>

<div class="container mt-4">
    <h3>DASHBOARD</h3>
    <div class="row justify-content-center mt-4">
        <div class="col-md-3">
            <div class="card card-blue">
                <div class="card-body">
                    <h5 class="card-title" id="shift1-count">0</h5>
                    <p class="card-text">SHIFT 1</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card card-green">
                <div class="card-body">
                    <h5 class="card-title" id="shift2-count">0</h5>
                    <p class="card-text">SHIFT 2</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card card-yellow">
                <div class="card-body">
                    <h5 class="card-title" id="shift3-count">0</h5>
                    <p class="card-text">SHIFT 3</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card card-red">
                <div class="card-body">
                    <h5 class="card-title" id="total-count">0</h5>
                    <p class="card-text">TOTAL</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="header-container">
                        <h4 class="header-title">Data Hasil</h4>
                        <a href="#" class="add-button" data-toggle="modal" data-target="#addDataModal" title="Tambah Data">
                            <i class="fas fa-plus"></i>
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-container">
                        <table class="table table-bordered table-black-border">
                            <thead>
                                <tr>
                                    <th>Nomor Barang</th>
                                    <th>CHARGIS</th>
                                    <th>DETAIL JAM</th>
                                    <th>CATATAN</th>
                                    <th>LINE</th>
                                    <th>Aksi</th>
                                </tr>
                            </thead>
                            <tbody id="data-table-body">
                            </tbody>
                        </table>
                    </div>
                    <div class="justify-content-center mt-4">
                        <h5>Made by ASP.NET</h5>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Tambah Data -->
<div class="modal fade" id="addDataModal" tabindex="-1" role="dialog" aria-labelledby="addDataModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addDataModalLabel">Tambah Data</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addDataForm">
                    <div class="form-group">
                        <label for="chargis-range">CHARGIS (Contoh Format: 1-2)</label>
                        <input type="text" class="form-control" id="chargis-range" required>
                    </div>
                    <div class="form-group">
                        <label for="note">Catatan</label>
                        <input type="text" class="form-control" id="note">
                    </div>
                    <div class="form-group">
                        <label for="entry-time">Waktu Masuk</label>
                        <input type="time" class="form-control" id="entry-time" required>
                    </div>
                    <div class="form-group">
                        <label for="exit-time">Waktu Keluar</label>
                        <input type="time" class="form-control" id="exit-time" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Tambah</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal Edit Data -->
<div class="modal fade" id="editDataModal" tabindex="-1" role="dialog" aria-labelledby="editDataModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editDataModalLabel">Edit Data</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editDataForm">
                    <div class="form-group">
                        <label for="edit-chargis-range">CHARGIS (Format: X-Y)</label>
                        <input type="text" class="form-control" id="edit-chargis-range" required>
                    </div>
                    <div class="form-group">
                        <label for="edit-note">Catatan</label>
                        <input type="text" class="form-control" id="edit-note">
                    </div>
                    <div class="form-group">
                        <label for="edit-entry-time">Waktu Masuk</label>
                        <input type="time" class="form-control" id="edit-entry-time" required>
                    </div>
                    <div class="form-group">
                        <label for="edit-exit-time">Waktu Keluar</label>
                        <input type="time" class="form-control" id="edit-exit-time" required>
                    </div>
                    <div class="form-group">
                        <label for="edit-line">Line</label>
                        <input type="text" class="form-control" id="edit-line" readonly>
                    </div>
                  
                    <input type="hidden" id="edit-row-id"> <!-- ID Baris -->
                    <button type="submit" class="btn btn-primary">Simpan Perubahan</button>
                </form>
            </div>
        </div>
    </div>
</div>


<!-- Modal Details Data -->
<div class="modal fade" id="detailsDataModal" tabindex="-1" role="dialog" aria-labelledby="detailsDataModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detailsDataModalLabel">Detail Data</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p><strong>Item ID:</strong> <span id="details-item-id"></span></p>
                <p><strong>CHARGIS Range:</strong> <span id="details-chargis-range"></span></p>
                <p><strong>Entry Time:</strong> <span id="details-entry-time"></span></p>
                <p><strong>Exit Time:</strong> <span id="details-exit-time"></span></p>
                <p><strong>Note:</strong> <span id="details-note"></span></p>
                <p><strong>Line:</strong> <span id="details-line"></span></p>
                <p><strong>Total CHARGIS:</strong> <span id="details-total-chargis"></span></p>
                <p><strong>Shift:</strong> <span id="details-shift"></span></p>
            </div>
        </div>
    </div>
</div>



<!-- Modal Edit Data -->
<div class="modal fade" id="editDataModal" tabindex="-1" role="dialog" aria-labelledby="editDataModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editDataModalLabel">Edit Data</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editDataForm">
                    <div class="form-group">
                        <label for="edit-chargis-range">CHARGIS (Format: X-Y)</label>
                        <input type="text" class="form-control" id="edit-chargis-range" required>
                    </div>
                    <div class="form-group">
                        <label for="edit-note">Catatan</label>
                        <input type="text" class="form-control" id="edit-note">
                    </div>
                    <div class="form-group">
                        <label for="edit-entry-time">Waktu Masuk</label>
                        <input type="time" class="form-control" id="edit-entry-time" required>
                    </div>
                    <div class="form-group">
                        <label for="edit-exit-time">Waktu Keluar</label>
                        <input type="time" class="form-control" id="edit-exit-time" required>
                    </div>
                    <div class="form-group">
                        <label for="edit-line">Line</label>
                        <input type="text" class="form-control" id="edit-line" readonly>
                    </div>
                    <div class="form-group">
                        <label for="edit-shift">Shift</label>
                        <select class="form-control" id="edit-shift" required>
                            <option value="SHIFT 1">SHIFT 1</option>
                            <option value="SHIFT 2">SHIFT 2</option>
                            <option value="SHIFT 3">SHIFT 3</option>
                        </select>
                    </div>
                    <input type="hidden" id="edit-row-id"> <!-- ID Baris -->
                    <button type="submit" class="btn btn-primary">Simpan Perubahan</button>
                </form>
            </div>
        </div>
    </div>
</div>



<script>
    $(document).ready(function () {

              function updateShiftCounts() {
    $.ajax({
        url: '/api/dataitems/shift-counts',
        type: 'GET',
        success: function (response) {
            $('#shift1-count').text(response.shift1Count);
            $('#shift2-count').text(response.shift2Count);
            $('#shift3-count').text(response.shift3Count);
            $('#total-count').text(response.totalCount);
        },
        error: function (xhr, status, error) {
            alert("An error occurred while fetching shift counts: " + xhr.responseText);
        }
    });
}
        function generateRandomItemId() {
            var letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
            var numbers = '0123456789';
            var randomLetters = '';
            var randomNumbers = '';

            for (var i = 0; i < 3; i++) {
                randomLetters += letters.charAt(Math.floor(Math.random() * letters.length));
            }

            for (var j = 0; j < 3; j++) {
                randomNumbers += numbers.charAt(Math.floor(Math.random() * numbers.length));
            }

            return randomLetters + randomNumbers;
        }

        function determineLine(entryHour, entryMinute, exitHour, exitMinute) {
            if (exitHour < entryHour || (exitHour === entryHour && exitMinute < entryMinute)) {
                exitHour += 24; // Adjust if exit time is after midnight
            }

            if (entryHour >= 7 && entryHour < 15) {
                if (exitHour <= 15) {
                    return 'LINE 1';
                } else if (exitHour <= 23) {
                    return 'LINE 1/LINE 2';
                } else {
                    return 'LINE 1/LINE 2/LINE 3';
                }
            } else if (entryHour >= 15) {
                if (exitHour <= 23) {
                    return 'LINE 2';
                } else {
                    return 'LINE 2/LINE 3';
                }
            } else {
                if (exitHour < 7) {
                    return 'LINE 3';
                } else if (exitHour <= 15) {
                    return 'LINE 3/LINE 1';
                } else if (exitHour <= 23) {
                    return 'LINE 3/LINE 1/LINE 2';
                }
            }
        }

        function calculateChargis(start, end) {
            return end - start + 1;
        }

        function determineShift(entryHour, entryMinute) {
            if (entryHour >= 7 && (entryHour < 15 || (entryHour === 15 && entryMinute === 0))) {
                return "SHIFT 1";
            } else if (entryHour >= 15 || (entryHour === 14 && entryMinute > 0)) {
                return "SHIFT 2";
            } else {
                return "SHIFT 3";
            }
        }

       

        function loadTableData() {
            $.ajax({
                url: '/api/dataitems',
                type: 'GET',
                success: function (data) {
                    $('#data-table-body').empty();
                    data.forEach(function (item) {
                        $('#data-table-body').append(
                            `<tr id="row-${item.id}">
                                <td>${item.itemId}</td>
                                <td>${item.chargisRange}</td>
                                <td>${item.entryTime} - ${item.exitTime}</td>
                                <td>${item.note}</td>
                                <td>${item.line}</td>
                                <td>
                                    <a href="#" class="btn btn-warning btn-sm edit-btn" data-id="${item.id}">EDIT</a>
                                    <a href="#" class="btn btn-info btn-sm details-btn" data-id="${item.id}">DETAILS</a>
                                    <a href="#" class="btn btn-danger btn-sm delete-btn" data-id="${item.id}">DELETE</a>
                                </td>
                            </tr>`
                        );
                    });
                    updateShiftCounts(); // Update counts after loading table data
                },
                error: function (xhr, status, error) {
                    alert("An error occurred while fetching data: " + xhr.responseText);
                }
            });
        }

        $('#addDataForm').submit(function (event) {
            event.preventDefault();

            var entryTime = $('#entry-time').val().split(':');
            var exitTime = $('#exit-time').val().split(':');
            var entryHour = parseInt(entryTime[0]);
            var entryMinute = parseInt(entryTime[1]);
            var exitHour = parseInt(exitTime[0]);
            var exitMinute = parseInt(exitTime[1]);

            var startChargis = parseInt($('#chargis-range').val().split('-')[0]);
            var endChargis = parseInt($('#chargis-range').val().split('-')[1]);

            var totalChargis = calculateChargis(startChargis, endChargis);
            var line = determineLine(entryHour, entryMinute, exitHour, exitMinute);
            var shift = determineShift(entryHour, entryMinute);

            var data = {
                ItemId: generateRandomItemId(),
                ChargisRange: $('#chargis-range').val(),
                EntryTime: $('#entry-time').val(),
                ExitTime: $('#exit-time').val(),
                Note: $('#note').val(),
                Line: line,
                Shift: shift,
                TotalChargis: totalChargis
            };

            $.ajax({
                url: '/api/dataitems',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function (response) {
                    loadTableData(); // Refresh table data
                    $('#addDataModal').modal('hide');
                    // Update counts after adding new data
                },
                error: function (xhr, status, error) {
                    alert("An error occurred while adding data: " + xhr.responseText);
                }
            });
        });

        $(document).on('click', '.edit-btn', function () {
            var id = $(this).data('id');

            $.ajax({
                url: `/api/dataitems/${id}`,
                type: 'GET',
                success: function (item) {
                    $('#edit-chargis-range').val(item.chargisRange);
                    $('#edit-note').val(item.note);
                    $('#edit-entry-time').val(item.entryTime);
                    $('#edit-exit-time').val(item.exitTime);
                    $('#edit-line').val(item.line);
                    $('#edit-row-id').val(item.id);
                    $('#editDataModal').modal('show');
                },
                error: function (xhr, status, error) {
                    alert("An error occurred while fetching data for editing: " + xhr.responseText);
                }
            });
        });

        function updateLineAndShift() {
            var entryTime = $('#edit-entry-time').val().split(':');
            var exitTime = $('#edit-exit-time').val().split(':');
            var entryHour = parseInt(entryTime[0]);
            var entryMinute = parseInt(entryTime[1]);
            var exitHour = parseInt(exitTime[0]);
            var exitMinute = parseInt(exitTime[1]);

            var line = determineLine(entryHour, entryMinute, exitHour, exitMinute);
            var shift = determineShift(entryHour, entryMinute);

            $('#edit-line').val(line);
            $('#edit-shift').val(shift);
        }

        // Update line and shift when entry time is changed
        $('#edit-entry-time').on('change', function () {
            updateLineAndShift();
        });

        // Update line and shift when exit time is changed
        $('#edit-exit-time').on('change', function () {
            updateLineAndShift();
        });

        $('#editDataForm').submit(function (event) {
            event.preventDefault();
            var id = $('#edit-row-id').val(); // Retrieve the ID from the hidden input field
            var data = {
                Id: parseInt(id), // Ensure ID is sent as a number
                ItemId: "BYPASSS", // Add ItemId field, assuming it's the same as Id
                ChargisRange: $('#edit-chargis-range').val(),
                EntryTime: $('#edit-entry-time').val(),
                ExitTime: $('#edit-exit-time').val(),
                Note: $('#edit-note').val(),
                Line: $('#edit-line').val(),
                Shift: $('#edit-shift').val()
            };

            // Ensure Shift is not empty
            if (!data.Shift) {
                alert("Shift field is required.");
                return;
            }

            $.ajax({
                url: `/api/dataitems/${id}`, // URL with ID
                type: 'PUT',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function () {
                    loadTableData(); // Refresh table data
                    $('#editDataModal').modal('hide');
                },
                error: function (xhr, status, error) {
                    var errorMessage = "An error occurred while updating data: ";
                    if (xhr.responseJSON && xhr.responseJSON.errors) {
                        errorMessage += "\n" + Object.keys(xhr.responseJSON.errors).map(key =>
                            `${key}: ${xhr.responseJSON.errors[key].join(', ')}`
                        ).join('\n');
                    } else {
                        errorMessage += xhr.responseText;
                    }
                    alert(errorMessage);
                }
            });
        });

        $(document).on('click', '.delete-btn', function () {
            var id = $(this).data('id');

            $.ajax({
                url: `/api/dataitems/${id}`,
                type: 'DELETE',
                success: function () {
                    $(`#row-${id}`).remove(); // Remove row from table
                    updateShiftCounts(); // Update counts after deleting data
                },
                error: function (xhr, status, error) {
                    alert("An error occurred while deleting data: " + xhr.responseText);
                }
            });
        });

        $(document).on('click', '.details-btn', function () {
            var id = $(this).data('id');

            $.ajax({
                url: `/api/dataitems/${id}`,
                type: 'GET',
                success: function (item) {
                    $('#details-item-id').text(item.itemId);
                    $('#details-chargis-range').text(item.chargisRange);
                    $('#details-entry-time').text(item.entryTime);
                    $('#details-exit-time').text(item.exitTime);
                    $('#details-note').text(item.note);
                    $('#details-line').text(item.line);
                    $('#details-total-chargis').text(item.totalChargis);
                    $('#details-shift').text(item.shift);
                    $('#detailsDataModal').modal('show');
                },
                error: function (xhr, status, error) {
                    alert("An error occurred while fetching details: " + xhr.responseText);
                }
            });
        });

        loadTableData();
    });

</script>
<script>
    // Data yang diperoleh
    const data = {
        "shift1Count": 0,
        "shift2Count": 0,
        "shift3Count": 0,
        "totalCount": 0
    };

    // Memperbarui elemen dengan data
    document.getElementById('shift1-count').innerText = data.shift1Count;
    document.getElementById('shift2-count').innerText = data.shift2Count;
    document.getElementById('shift3-count').innerText = data.shift3Count;
    document.getElementById('total-count').innerText = data.totalCount;
</script>
